<?xml version="1.0" encoding="utf-8" ?>
<configuration debug="true" scan="true" scanPeriod="30 seconds" >

    <springProperty scope="context" name="logLevel" source="log.level"/>
    <springProperty scope="context" name="logPath" source="log.path"/>

    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss} [%level] [%class:%line] - %m %n</pattern>
        </encoder>
    </appender>

    <appender name="FILE-OUT" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${logPath}/VCardManagement.log</file>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss} [%level] [%class:%line] - %m %n</pattern>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${logPath}/VCardManagement.%d{yyyy-MM-dd}.log.%i.zip</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>50MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>1</maxHistory>
        </rollingPolicy>
        <append>true</append>
    </appender>

    <appender name="FILE-OUT-ERR" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${logPath}/VCardManagement_error.log</file>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss} [%level] [%class:%line] - %m %n</pattern>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${logPath}/VCardManagement_error.%d{yyyy-MM-dd}.log.%i.zip</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>50MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>1</maxHistory>
        </rollingPolicy>
        <append>true</append>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>error</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <springProfile name="dev">
        <root level="${logLevel}">
            <appender-ref ref="STDOUT"/>
            <appender-ref ref="FILE-OUT"/>
            <!--<appender-ref ref="FILE-OUT-ERR"/>-->
        </root>
    </springProfile>

    <springProfile name="prod">
        <root level="${logLevel}">
            <appender-ref ref="STDOUT"/>
            <appender-ref ref="FILE-OUT"/>
            <appender-ref ref="FILE-OUT-ERR"/>
        </root>
    </springProfile>

    <springProfile name="test">
        <root level="${logLevel}">
            <appender-ref ref="STDOUT"/>
            <appender-ref ref="FILE-OUT"/>
            <appender-ref ref="FILE-OUT-ERR"/>
        </root>
    </springProfile>

</configuration>
